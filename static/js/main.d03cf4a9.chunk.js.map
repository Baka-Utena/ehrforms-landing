{"version":3,"sources":["Textfield.js","Form.js","Modal.js","scss/MenuItem.js","Header.js","ButtonShowModal.js","App.js","serviceWorker.js","index.js"],"names":["TextField","name","onChange","onBlur","placeholder","required","error","className","classNames","type","Form","props","state","fields","email","phone","errors","this","classes","onSubmit","contactSubmit","bind","handleChange","value","field","e","target","setState","fieldName","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","preventDefault","handleValidation","alert","Component","Modal","onClose","show","onClick","MenuItem","anchorTarget","handleClick","window","scrollTo","top","itemPosition","left","behavior","block","document","getElementById","itemName","active","href","aria-label","itemTitle","Header","handleResize","handleScroll","sections","product","how","features","contact","activeMenuItem","positions","windowWidth","innerWidth","getAnchorPoints","curScroll","pageYOffset","documentElement","scrollTop","headerHeight","querySelector","offsetHeight","newPos","key","getBoundingClientRect","curPos","scrollY","curSection","newMenuState","Section1","Section2","Section3","addEventListener","removeEventListener","menuItems","push","button","ButtonShowModal","App","showModal","scrollFirstScreen","scrollFirstScreenDetection","id","React","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d03cf4a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction TextField({name, onChange, onBlur, placeholder, required, error}) {\r\n    return (\r\n        <>\r\n            <div className={classNames(\"textfield\", {'is-required': required})}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"textfield__input\"\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}/>\r\n                    <div className=\"textfield__error\">{error}</div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TextField;\r\n","import React, {Component} from \"react\";\r\nimport TextField from \"./Textfield\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <form name=\"contactform\" className={classNames(\"form\", this.props.classes)}\r\n                      onSubmit={this.contactSubmit.bind(this)}>\r\n                    <h3 className=\"form__header\">Have a question about EHR Forms?</h3>\r\n                    <div className=\"form__caption\">\r\n                        Ask it here and we will get back to you as soon as we can\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col form__col-2\">\r\n                            <TextField name=\"name\"\r\n                                       placeholder=\"Name\"\r\n                                       required\r\n                                       onChange={this.handleChange.bind(this, \"name\")}\r\n                                       value={this.state.fields[\"name\"]}\r\n                                       error={this.state.errors[\"name\"]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col form__col-2 is-nessesary\">\r\n                            <TextField name=\"email\"\r\n                                       placeholder=\"E-mail\"\r\n                                       required\r\n                                       onChange={this.handleChange.bind(this, \"email\")}\r\n                                       error={this.state.errors[\"email\"]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form__col form__col-2 is-nessesary\">\r\n                            <TextField name=\"phone\"\r\n                                       placeholder=\"Phone\"\r\n                                       required\r\n                                       onChange={this.handleChange.bind(this, \"phone\")}\r\n                                       error={this.state.errors[\"phone\"]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <textarea className=\"textarea\"/>\r\n                    </div>\r\n                    <div className=\"form__row\">\r\n                        <div className=\"form__col\">\r\n                            <button className=\"btn btn_primary\">Submit</button>\r\n                        </div>\r\n                        <div className=\"form__col\">\r\n                            * - Fields are required\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({fields});\r\n    }\r\n\r\n    fieldValidation(fieldName, e) {\r\n        let fields = this.state.fields;\r\n        fields[fieldName] = e.target.value;\r\n        let errors = {};\r\n\r\n        if (!fields[fieldName]) {\r\n            errors[fieldName] = \"Cannot be empty\";\r\n        }\r\n\r\n        this.setState({errors, fields});\r\n/*\r\n        switch (field) {\r\n            case \"name\":\r\n                if (!fields[\"name\"]) {\r\n                    errors[\"name\"] = \"Cannot be empty\";\r\n                    this.setState({errors: errors});\r\n                }\r\n                if (typeof fields[\"name\"] !== \"undefined\") {\r\n                    if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\r\n                        errors[\"name\"] = \"Only letters\";\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }*/\r\n\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!fields[\"name\"]) {\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Cannot be empty\";\r\n            this.setState({errors: errors});\r\n\r\n        } else if (typeof fields[\"name\"] !== \"undefined\") {\r\n            if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"name\"] = \"Only letters\";\r\n            }\r\n        }\r\n\r\n        if (!fields[\"email\"]) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n            let lastAtPos = fields[\"email\"].lastIndexOf('@');\r\n            let lastDotPos = fields[\"email\"].lastIndexOf('.');\r\n\r\n            if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\r\n                formIsValid = false;\r\n                errors[\"email\"] = \"Email is not valid\";\r\n            }\r\n        }\r\n\r\n        if (!fields[\"phone\"]) {\r\n            formIsValid = false;\r\n            errors[\"phone\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        this.setState({errors: errors});\r\n        return formIsValid;\r\n    }\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.handleValidation()) {\r\n            alert(\"Form submitted\");\r\n        } else {\r\n            alert(\"Form has errors.\")\r\n        }\r\n\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: {\r\n                name: '',\r\n                email: '',\r\n                phone: ''\r\n            },\r\n            errors: {}\r\n        }\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import Form from \"./Form\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass Modal extends Component {\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n    render() {\r\n        if(!this.props.show){\r\n            return null;\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"modal\" onClose={e => {\r\n                    this.onClose(e);\r\n                }}>\r\n                    <div className=\"modal__background\" onClick={this.onClose}/>\r\n                    <div className=\"modal__wrapper\">\r\n                        <Form classes=\"light\"/>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.anchorTarget = null;\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(e) {\r\n        e.preventDefault();\r\n        window.scrollTo({top: this.props.itemPosition, left: 0, behavior:\"smooth\", block: \"start\"});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.anchorTarget = document.getElementById(this.props.itemName);\r\n    }\r\n    componentWillUnmount() {\r\n        this.anchorTarget = null;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <li className={classNames(\"menu__item\", this.props.active)}>\r\n                <a href={\"#\" + this.props.itemName} onClick={this.handleClick} aria-label={'Scroll to' + this.props.itemName}>\r\n                    {this.props.itemTitle}\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, {Component} from \"react\";\r\nimport MenuItem from \"./scss/MenuItem\";\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n\r\n        this.sections = {\r\n                product: 'Product',\r\n                how: 'How it works',\r\n                features: 'Features',\r\n                contact: 'Contact'\r\n            };\r\n        this.state = {\r\n            activeMenuItem: {\r\n                top: null,\r\n                product: null,\r\n                how: null,\r\n                features: null,\r\n                contact: null\r\n            },\r\n            positions: {\r\n                product: '',\r\n                how: '',\r\n                features: '',\r\n                contact: ''\r\n            },\r\n            windowWidth: ''\r\n        };\r\n    }\r\n\r\n\r\n    handleResize() {\r\n        this.setState({windowWidth: window.innerWidth});\r\n        this.getAnchorPoints();\r\n    };\r\n\r\n    getAnchorPoints() {\r\n        const curScroll = window.pageYOffset || document.documentElement.scrollTop;\r\n        const headerHeight = document.querySelector('.header').offsetHeight;\r\n\r\n        let newPos = {};\r\n        for (let key in this.state.positions) {\r\n            newPos[key] = this.state.positions[key];\r\n        }\r\n        for (let key in newPos) {\r\n            newPos[key] = (document.getElementById(key).getBoundingClientRect().top + curScroll - headerHeight);\r\n        }\r\n        this.setState({positions: newPos});\r\n    }\r\n\r\n    handleScroll() {\r\n        const curPos = window.scrollY;\r\n        let curSection = null;\r\n\r\n        if(curPos > (this.state.positions.contact - 2)) {\r\n            curSection = 'contact';\r\n        } else if(curPos > (this.state.positions.features - 2)) {\r\n            curSection = 'features';\r\n        } else if(curPos > (this.state.positions.how - 2)) {\r\n            curSection = 'how';\r\n        } else if(curPos > (this.state.positions.product - 2)) {\r\n            curSection = 'product';\r\n        } else {\r\n            curSection = 'top';\r\n        }\r\n\r\n        if(this.state.activeMenuItem[curSection] !== \"active\") {\r\n\r\n            const newMenuState = {\r\n                top: '',\r\n                Section1: '',\r\n                Section2: '',\r\n                Section3: ''\r\n            };\r\n            newMenuState[curSection] = \"active\";\r\n            this.setState({ activeMenuItem: newMenuState });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAnchorPoints();\r\n        window.addEventListener('resize', this.handleResize);\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    render() {\r\n        const menuItems = [];\r\n        for (var key in this.sections) {\r\n            menuItems.push(<MenuItem itemName={key} itemTitle={this.sections[key]} itemPosition={this.state.positions[key]} active={this.state.activeMenuItem[key]}/>);\r\n        }\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header__container\">\r\n                    <div className=\"logo\"/>\r\n                    <ul className=\"menu\">\r\n                        {menuItems}\r\n                    </ul>\r\n                    {this.props.button}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction ButtonShowModal({onClick}) {\r\n    return (\r\n        <button className=\"btn btn_white\"\r\n                onClick={onClick}>\r\n            Request a demo\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonShowModal;\r\n","import React from 'react';\nimport './App.scss';\nimport Form from \"./Form\";\nimport Modal from \"./Modal\";\nimport Header from \"./Header\";\nimport ButtonShowModal from \"./ButtonShowModal\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false,\n            scrollFirstScreen: false\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.scrollFirstScreenDetection = this.scrollFirstScreenDetection.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.scrollFirstScreenDetection = this.scrollFirstScreenDetection.bind(this));\n    }\n\n    scrollFirstScreenDetection() {\n        const FIRSTSCREENHEIGHT = 760;\n        this.setState({scrollFirstScreen: (window.pageYOffset > FIRSTSCREENHEIGHT)});\n    }\n\n    showModal = e => {\n        this.setState({\n            show: !this.state.show\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <Header\n                    button={ this.state.scrollFirstScreen ? <ButtonShowModal onClick={e => { this.showModal() }}/> : null }>\n                </Header>\n                <div className=\"section section1\">\n                    <div className=\"container section1__container\">\n                        <h1 className=\"section1__header\">Solution for building openEHR based applications fast</h1>\n                        <div className=\"section1__infogr\"/>\n                        <ButtonShowModal onClick={e => {\n                                             this.showModal();\n                                         }}/>\n                    </div>\n                </div>\n                <span id=\"product\"/>\n                <div className=\"section section2\">\n                    <div className=\"container section2__container\">\n                        <h2 className=\"section__header\">We solve the following problems</h2>\n\n                        <div className=\"blocks\">\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__top\">\n                                    Developing forms based on openEHR is really time consuming because of template\n                                    complicity – validation rules, bulky composition structure\n                                </div>\n                                <div className=\"blocks__bottom\">\n                                    WYSIWYG form builder is based on openEHR\n                                    <hr/>\n                                    Visual elements are loosely coupled with openEHR model via bindings\n                                </div>\n                            </div>\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__top\">\n                                    Forms reflecting openEHR template structure are overloaded and it takes too much\n                                    time to\n                                    fill out to the clinician composition structure\n                                </div>\n                                <div className=\"blocks__bottom\">\n                                    Compact forms with easy to operate structure\n                                    <hr/>\n                                    Decision support when user interacts with user interface\n                                    <hr/>\n                                    Various ways to speed up filling of same blocks or dependent fields\n                                </div>\n                            </div>\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__top\">\n                                    Low reusability of UI logic for similar archetypes in different forms and products\n                                </div>\n                                <div className=\"blocks__bottom\">\n                                    Reusable widgets for archetypes available in different forms\n                                </div>\n                            </div>\n                            <div className=\"blocks__item\">\n                                <div className=\"blocks__top\">\n                                    Forms have to be built by frontend developers, with knowledge of openEHR\n                                    specification\n                                    in all its sophistication\n                                </div>\n                                <div className=\"blocks__bottom\">\n                                    Forms built for multiple openEHR compositions from different templates\n                                    <hr/>\n                                    Various purposes visual componenta libraries from third party developers\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"example\">\n\n                        </div>\n                    </div>\n                </div>\n                <span id=\"how\"/>\n                <div className=\"section section3\">\n                    <div className=\"container\">\n                        <h2 className=\"section__header\">How it works</h2>\n                        <div className=\"blocks-arrows\">\n                            <div className=\"blocks-arrows__item\">\n                                <div className=\"blocks-arrows__arrow\">\n                                    1\n                                </div>\n                                Start by creating a form using your openEHR template(s)\n                            </div>\n                            <div className=\"blocks-arrows__item\">\n                                <div className=\"blocks-arrows__arrow\">\n                                    2\n                                </div>\n                                Customize it with any logic you need to meet UX requirements\n                            </div>\n                            <div className=\"blocks-arrows__item\">\n                                <div className=\"blocks-arrows__arrow\">\n                                    3\n                                </div>\n                                Swiftly integrate form into your end user application\n                            </div>\n                            <div className=\"blocks-arrows__item\">\n                                <div className=\"blocks-arrows__arrow\">\n                                    4\n                                </div>\n                                Save Compositions into your CDR\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <span id=\"features\"/>\n                <div className=\"section section4\">\n                    <div className=\"container\">\n                        <h2 className=\"section__header\">Key features</h2>\n                        <div className=\"columns\">\n                            <div className=\"columns__item\">\n                                <ul className=\"list-markered\">\n                                    <li className=\"list-markered__item\">Simple form building process with maximum\n                                        reusability and\n                                        versatility in the process, that is possible without deep knowledge of openEHR\n                                        specification\n                                    </li>\n                                    <li className=\"list-markered__item\">WYSIWYG UI building tool</li>\n                                    <li className=\"list-markered__item\">Flexible components loosely coupled with EHR\n                                        template\n                                    </li>\n                                </ul>\n                            </div>\n                            <div className=\"columns__item\">\n                                <ul className=\"list-markered\">\n                                    <li className=\"list-markered__item\">Rich component library with enough components to\n                                        build most\n                                        complicated forms\n                                    </li>\n                                    <li className=\"list-markered__item\">Most complicated components can be used - smart\n                                        user\n                                        assistan, 3D\n                                        elements, charts\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section section5\">\n                    <div className=\"container section5__container\">\n                        <div className=\"columns-3\">\n                            <div className=\"columns-3__item\">\n                                <div className=\"columns-3__img columns-3__img_1\"/>\n                                <div className=\"columns-3__header\">10</div>\n                                <div className=\"columns-3__text\">\n                                    applications developed and upgraded using EHR Forms\n                                </div>\n                            </div>\n                            <div className=\"columns-3__item\">\n                                <div className=\"columns-3__img columns-3__img_2\"/>\n                                <div className=\"columns-3__header\">200+</div>\n                                <div className=\"columns-3__text\">\n                                    Forms created\n                                </div>\n                            </div>\n                            <div className=\"columns-3__item\">\n                                <div className=\"columns-3__img columns-3__img_3\"/>\n                                <div className=\"columns-3__header\">~30 000</div>\n                                <div className=\"columns-3__text\">\n                                    clinicians and medical specialists are using these forms every day\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <span id=\"contact\" name=\"contact\"/>\n                <div className=\"footer\">\n                    <div className=\"container footer__container\">\n                        <div className=\"copyright\">\n                            <span>Copyright 2020</span>\n                            <div className=\"logo-small\"/>\n                        </div>\n                        <Form/>\n                    </div>\n\n                </div>\n                <Modal onClose={this.showModal} show={this.state.show}/>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}